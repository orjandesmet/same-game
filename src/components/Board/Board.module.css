.board {
  display: grid;
  grid-template-rows: repeat(var(--i-nr-of-rows), 1fr);
  grid-template-columns: repeat(var(--i-nr-of-columns), 1fr);
  width: 100%;
  max-width: calc(100vh - 150px);
  border: 1px solid var(--i-foreground-color);
  border-radius: calc(50% / var(--i-nr-of-columns));
  box-sizing: border-box;
  gap: 0.25em;
  padding: 0.25em;
}

.cell {
  padding: 0;
  aspect-ratio: 1 / 1;
  grid-row: calc(var(--i-row-idx) + 1);
  grid-column: calc(var(--i-column-idx) + 1);
  background-size: 65%;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  position: relative;
  border-radius: 50%;
  box-sizing: content-box;
}

.cell.empty {
  pointer-events: none;
}

.cell.r {
  background-color: var(--i-color-r);
}

.cell.r.withPkmn {
  background-image: var(--i-img-r);
}

.cell.b {
  background-color: var(--i-color-b);
}

.cell.b.withPkmn {
  background-image: var(--i-img-b);
}

.cell.g {
  background-color: var(--i-color-g);
}

.cell.g.withPkmn {
  background-image: var(--i-img-g);
}

.cell.y {
  background-color: var(--i-color-y);
}

.cell.y.withPkmn {
  background-image: var(--i-img-y);
}

.cell.p {
  background-color: var(--i-color-p);
}

.cell.p.withPkmn {
  background-image: var(--i-img-p);
}

.cell.w {
  background-color: var(--i-color-w);
}

.cell.w.withPkmn {
  background-image: var(--i-img-w);
}

.cell.isBurning::after {
  position: absolute;
  content: ' ';
  width: 100%;
  height: 100%;
  inset: 0;
  background: linear-gradient(
      180deg,
      var(--i-color-r-accent-2),
      var(--i-color-r-accent-1) 100%
    )
    bottom no-repeat;
  background-size: 100% 0;
  border-radius: 10% 10% 50% 50%;
  animation: burning 2s ease-in forwards;
}

@keyframes burning {
  from {
    background-size: 100% 0;
  }

  to {
    background-size: 100% 100%;
  }
}

.cell.isFlooded::after {
  position: absolute;
  content: ' ';
  width: 100%;
  height: 100%;
  inset: 0;
  background: linear-gradient(180deg, white, var(--i-color-b-accent-2)) top
    no-repeat;
  border-radius: 50% 50% 0 0;
  animation: flooded 2s ease-in forwards;
}

@keyframes flooded {
  0% {
    background-size: 100% 0;
  }

  80% {
    background-size: 100% 100%;
  }

  100% {
    border-radius: 50% 50% 15% 15%;
  }
}

.cell.isCutting::after {
  position: absolute;
  content: ' ';
  width: 100%;
  height: 100%;
  inset: 0;
  background: linear-gradient(90deg, var(--i-background-color) 0 0) right 50%
    no-repeat border-box;
  background-size: 100% 0;
  border-radius: 50%;
  animation: cutting 2s ease-in-out forwards;
}

@keyframes cutting {
  0% {
    background-size: 0% 4px;
  }

  5% {
    background-size: 100% 4px;
  }

  15% {
    background-size: 100% 0;
  }

  30% {
    background-size: 100% 0;
  }

  100% {
    background-size: 100% 100%;
  }
}

.cell.isShocked::after {
  position: absolute;
  content: ' ';
  width: 100%;
  height: 100%;
  inset: 0;
  background:
    linear-gradient(90deg, white, white) calc(40% + 3px) 70% no-repeat,
    linear-gradient(90deg, white, white) 40% top no-repeat;
  background-size: 3px 55%;
  border-radius: 50%;
  animation: shocked 2s ease-in-out forwards;
}

@keyframes shocked {
  0% {
    opacity: 0;
    background-size: 3px 55%;
  }

  5% {
    opacity: 1;
  }

  15% {
    opacity: 0;
  }

  20% {
    opacity: 1;
  }

  25% {
    opacity: 0;
  }

  30% {
    opacity: 1;
    background-size: 3px 55%;
  }

  100% {
    opacity: 1;
    background-size: 100% 100%;
  }
}

.cell.isTransforming {
  animation: transforming 1s ease-in forwards;
}

@keyframes transforming {
  0% {
    transform: unset;
  }

  50% {
    transform: skew(-15deg, -15deg);
  }

  100% {
    background-color: black;
    transform: skew(15deg, 15deg);
  }
}

.cell:not(.empty):hover {
  border: 1px solid light-dark(red, blue);
}

.gameOverDialog {
  grid-row: 1 / -1;
  grid-column: 1 / -1;
  background-color: rgba(0, 0, 0, 0.75);
  color: white;
  border-radius: calc(50% / var(--i-nr-of-columns));
  z-index: 500;
  backdrop-filter: blur(2px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}